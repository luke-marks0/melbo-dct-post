Write a proof of the Pythagorean theorem, "theorem EuclideanGeometry.dist_sq_eq_dist_sq_add_dist_sq_iff_angle_eq_pi_div_two {V : Type u_1} {P : Type u_2} [NormedAddCommGroup V] [InnerProductSpace ℝ V] [MetricSpace P] [NormedAddTorsor V P] (p1 p2 p3 : P) : dist p1 p3 * dist p1 p3 = dist p1 p2 * dist p1 p2 + dist p3 p2 * dist p3 p2 ↔ EuclideanGeometry.angle p1 p2 p3 = Real.pi / 2"
Write a proof of the law of quadratic reciprocity, "theorem legendreSym.quadratic_reciprocity {p q : ℕ} [Fact (Nat.Prime p)] [Fact (Nat.Prime q)] (hp : p ≠ 2) (hq : q ≠ 2) (hpq : p ≠ q) : legendreSym q ↑p * legendreSym p ↑q = (-1) ^ (p / 2 * (q / 2))"
Write a proof of the law of quadratic reciprocity for the Jacobi symbol, "theorem jacobiSym.quadratic_reciprocity {a b : ℕ} (ha : Odd a) (hb : Odd b) : jacobiSym (↑a) b = (-1) ^ (a / 2 * (b / 2)) * jacobiSym (↑b) a"
Write a proof of the area of a circle, "theorem Theorems100.area_disc (r : NNReal) : MeasureTheory.volume (Theorems100.disc ↑r) = ↑NNReal.pi * ↑r ^ 2"
Write a proof of Euler’s generalization of Fermat’s little theorem, "theorem Nat.ModEq.pow_totient {x n : ℕ} (h : x.Coprime n) : x ^ n.totient ≡ 1 [MOD n]"
Write a proof of the infinitude of primes, "theorem Nat.exists_infinite_primes (n : ℕ) : ∃ (p : ℕ), n ≤ p ∧ Nat.Prime p"
Write a proof of Euler’s summation of 1 + (1/2)^2 + (1/3)^2 + …, "theorem hasSum_zeta_two : HasSum (fun (n : ℕ) => 1 / ↑n ^ 2) (Real.pi ^ 2 / 6)"
Write a proof of the fundamental theorem of integral calculus, "theorem intervalIntegral.integral_eq_sub_of_hasDeriv_right_of_le {E : Type u_3} [NormedAddCommGroup E] [NormedSpace ℝ E] {a b : ℝ} [CompleteSpace E] {f f' : ℝ → E} (hab : a ≤ b) (hcont : ContinuousOn f (Set.Icc a b)) (hderiv : ∀ x ∈ Set.Ioo a b, HasDerivWithinAt f (f' x) (Set.Ioi x) x) (f'int : IntervalIntegrable f' MeasureTheory.volume a b) : ∫ (y : ℝ) in a..b, f' y = f b - f a"
Write a proof of the Abel-Ruffini theorem, "theorem AbelRuffini.exists_not_solvable_by_rad : ∃ (x : ℂ), IsAlgebraic ℚ x ∧ ¬IsSolvableByRad ℚ x"
Write a proof of De Moivre’s formula, "theorem Complex.cos_add_sin_mul_I_pow (n : ℕ) (z : ℂ) : (Complex.cos z + Complex.sin z * Complex.I) ^ n = Complex.cos (↑n * z) + Complex.sin (↑n * z) * Complex.I"
Write a proof of Liouville’s theorem and the construction of transcendental numbers, "theorem Liouville.transcendental {x : ℝ} (lx : Liouville x) : Transcendental ℤ x"
Write a proof of the four squares theorem, "theorem Nat.sum_four_squares (n : ℕ) : ∃ (a : ℕ) (b : ℕ) (c : ℕ) (d : ℕ), a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = n"
Write a proof of the statement that all primes (1 mod 4) equal the sum of two squares, "theorem Nat.Prime.sq_add_sq {p : ℕ} [Fact (Nat.Prime p)] (hp : p % 4 ≠ 3) : ∃ (a : ℕ) (b : ℕ), a ^ 2 + b ^ 2 = p"
Write a proof of the non-denumerability of the continuum, "theorem Cardinal.not_countable_real : ¬Set.univ.Countable"
Write a proof of the Schroeder-Bernstein theorem, "theorem Function.Embedding.schroeder_bernstein {α : Type u} {β : Type v} {f : α → β} {g : β → α} (hf : Function.Injective f) (hg : Function.Injective g) : ∃ (h : α → β), Function.Bijective h"
Write a proof of Leibniz’s series for π, "theorem Real.tendsto_sum_pi_div_four : Filter.Tendsto (fun (k : ℕ) => ∑ i ∈ Finset.range k, (-1) ^ i / (2 * ↑i + 1)) Filter.atTop (nhds (Real.pi / 4))"
Write a proof of the sum of the angles of a triangle, "theorem EuclideanGeometry.angle_add_angle_add_angle_eq_pi {V : Type u_1} {P : Type u_2} [NormedAddCommGroup V] [InnerProductSpace ℝ V] [MetricSpace P] [NormedAddTorsor V P] {p1 p2 p3 : P} (h2 : p2 ≠ p1) (h3 : p3 ≠ p1) : EuclideanGeometry.angle p1 p2 p3 + EuclideanGeometry.angle p2 p3 p1 + EuclideanGeometry.angle p3 p1 p2 = Real.pi"
Write a proof of the ballot problem, "theorem Ballot.ballot_problem (q p : ℕ) : q < p → (ProbabilityTheory.uniformOn (Ballot.countedSequence p q)) Ballot.staysPositive = (↑p - ↑q) / (↑p + ↑q)"
